CHANGES
=======

* Automated adding outputs from tests
* revert change to setup.py in order to expose dependents
* Automated adding outputs from tests

v1.1.5
------

* Support \`minimum\` and \`maximum\` properties in JSON Schema output
* enable tests for validating min and max values
* add minimum and maximum properties to JSON Schema
* Automated adding outputs from tests
* add missing
* tutorial
* more-docs
* Automated adding outputs from tests
* Automatically generated requirements.txt and requirements-dev.txt
* add-missing
* regen
* more docs
* Automated adding outputs from tests
* fix Excel encoding issue
* fix Excel encoding issue
* Automated adding outputs from tests
* tutorial
* tutorial
* tutorial
* new docs
* Automated adding outputs from tests
* update previous implementation of excel generator module
* fix excel generator unit test based on new implementation
* fixes previous implementation of excel generator

v1.1.4
------

* Automated adding outputs from tests
* temp restoring
* fixing paths
* fixing paths
* Automated adding outputs from tests
* suppressing test

v1.1.2
------

* Automated adding outputs from tests
* test to trigger sparql check
* Additional markdown tests for customized output
* Refactoring validators
* allow customization of markdown headers
* Automated adding outputs from tests
* use .shex extension for shex
* try adding name explicitly to setup.py
* add version to setup.py. this used to come automatically from using pbr in setup.py, but when pbr was removed in favor of an explicit setup.py (to help github discover dependents), version wasn't included
* Automated adding outputs from tests
* Added command line ops to make projectgen more configurable
* Automated adding outputs from tests
* Enforcing \`-d\` option on \`gen-markdown\`

v1.1.1
------

* Automated adding outputs from tests
* Automatically generated requirements.txt and requirements-dev.txt
* exclude tombstoned rdflib-jsonld
* force non-tombstoned rdflib-jsonld. See #291
* enforce -d option for markdown generator
* Add checks for Any type
* DateTime mapping for SQLDDL
* Automated adding outputs from tests
* Updated docs link to point to Chris's new wonderful docs
* Automated adding outputs from tests
* Automated adding outputs from tests
* first version of sphinx docs for excel generator
* Update excel.rst
* add first version of sphinx docs for excel generator
* Automated adding outputs from tests

v1.1.0
------

* Automatically generated requirements.txt and requirements-dev.txt
* Automated adding outputs from tests
* Automatically generated requirements.txt and requirements-dev.txt
* Automated adding outputs from tests
* Change of attribute name from \`definitions\` to \`$defs\` in JSON Schema output
* missed a few replacements of definitions attribute in test\_issue\_129
* Automated adding outputs from tests
* fixed failing tests in test\_issues for  change
* Automatically generated requirements.txt and requirements-dev.txt
* [Feature] Excel spreadsheet generation module
* regen
* fix temp file path in excel generator test
* Reverted test artifact to match main
* Moved javagen specific options to javagen cli method
* Fixed merge-mishap in bringing in oocodegen type handling
* Set up OOCodeGenerator with an abstract serialize method, then checked for the method being abstract in test\_tccm\_issues. Also tweaked the example java template to avoid warnings
* Can read from template files now and has an example
* Producing java that will compile, with types simplified to Strings and no annotations
* First pass at #175
* change argument name in excel generator unit test
* fix path to output excel sreadsheet
* Automated adding outputs from tests
* more examples for #173
* Automated adding outputs from tests
* more docs
* latest release
* Automated adding outputs from tests
* bump linkml
* Update install.md
* more docs
* Automated adding outputs from tests
* Allow serving of \_static
* Automated adding outputs from tests
* Automatically generated requirements.txt and requirements-dev.txt
* modify output JSON schema after incorporating  change
* docs
* loadsa docs
* add a setup.py that echos setup.cfg so that github can trace the dependents graph
* generated
* generators docs
* add name to setup.py to enable dependents graph in github
* just the faqs
* \`unittest\` test cases for excelgen generator
* unittest test cases for excelgen generator module
* first pass at sphinx docs
* removing unused jekyll artefacts
* Automated adding outputs from tests

v1.0.6
------

* Adding SPARQL validators
* Automated adding outputs from tests
* Automated adding outputs from tests
* move log level from error to debug
* fix path where the generated excel path should be saved
* changed definitions references to $defs
* Automated adding outputs from tests
* Delete Migration.md
* Added test to ensure predictable behavior for simple dicts, fixes #313 Added demo and test for making schemas for arbitrary dicts, fixes #315
* changed definitions to $defs in JSON Schema output
* remove duplicate slots
* use domain\_of slot property to capture class slot relationship
* revert \_workbook\_path() definition to bash compatible
* changed signature of visit\_class()
* Automated adding outputs from tests
* Automatically generated requirements.txt and requirements-dev.txt

v1.0.5
------

* added docstrings to classes and methods in excelgen module
* Automated adding outputs from tests
* bump runtime
* removed explicit import from openpyxl library
* forcing the inclusion of an rdf:type works around the rdf:type prefix issue in #163
* default\_namespace
* Addressing issue #163
* remove test file that is auto added by PyCharm
* create slots as column names in respective worksheets
* generate empty excel sheet with class names
* Automated adding outputs from tests
* Automatically generated requirements.txt and requirements-dev.txt
* remove test spreadsheets
* added openpyxl to Pipfile
* create empty workbook using openpyxl
* adding CSV
* Automated adding outputs from tests
* added a data conversion CLI
* Adding wrapper for jsonschema validation
* Adding tests for #303
* Automated adding outputs from tests
* fixing post\_init for non-inlined single-valued slots
* barebones for excel generator module
* Automated adding outputs from tests
* Automated adding outputs from tests
* Fix setup url

v1.0.4
------

* Automated adding outputs from tests
* Automatically generated requirements.txt and requirements-dev.txt
* Switch to v1.0.13 of linkml-runtime
* documenting genmeta and adding a check. See https://github.com/linkml/linkml-runtime/issues/10
* adding CLI
* Automated adding outputs from tests
* link directly to docs page
* Automated adding outputs from tests
* add issue templates for bug and feature requests
* reformatted and fixed links in README
* new generator: projectgen, this will run all other generators
* fixed typo
* Stringify SQL statements in executor
* Update tests
* Ensure that name of enum is passed to SQL Enum
* Fix executor for engine when generating DDL
* example of prov associations
* Automated adding outputs from tests
* Automated adding outputs from tests
* only export mappings
* Removed workaround for linkml/linkml-runtime#17, fixed there
* testing mysql
* testing mssql, sqlite
* test for #273
* test for #273
* Moving additional code into common parent: add\_prefix
* Abstracts common add\_mapping code from different generators into common parent Fixes #278
* Automated adding outputs from tests
* Automated adding outputs from tests
* Automated adding outputs from tests

v1.0.3
------

* add missing
* more tests
* Undo output commits
* Adding more tests
* Automated adding outputs from tests
* Update test\_gen\_jsonld.py
* Update test\_enumeration.py
* Update test\_enumeration.py
* comprehensive tests for prefixes #163 #278 #192
* comprehensive tests for prefixes #163 #278 #192

v1.0.2
------

* Automated adding outputs from tests
* Automatically generated requirements.txt and requirements-dev.txt
* Update Pipfile
* add new test for not-closed
* add additional properties test
* add additional properties flag to updated file
* add changes for --not-closed/--closed to cli to control global additional properties
* Modified tests as per \_\_str\_\_() behavior change
* Fixed incorrect extension on JSON Schema in meta.jsonld
* Added enumerations to expected JSON Schema files
* Apparently, we need \`chardet\` for the tests now
* Overwrote EnumDefinitionImpl's incorrect \_\_str\_\_() implementation
* Restored visit\_enum in jsonschemagen
* Fixed test merged from 'main'
* add updated examples notebook
* update email for wdduncan
* Updated schema with the generated enumeration
* Added test for correct functioning of FamilialRelationship()
* Added test with expected output
* First stab at adding enums to JSON Schema
* Automated adding outputs from tests
* Automatically generated requirements.txt and requirements-dev.txt
* regen
* Get the latest rdflib-pyldmod-compat which pulls correct pyldmod
* Change text of mismatch message to get "error" out of it
* Caught a couple of cases where either JSONObj or dictionaries could be provided
* test for #265 - currently fails
* test for #265 - currently fails
* test for #265 - currently fails
* Automated adding outputs from tests
* Update pr-test.yaml
* Automated adding outputs from tests
* allowing ontologyIRI to be different from schema.id, fixes #246 Added owlgen tests
* Adding markdown pages for subsets and adding markdown tests Fixes #262 Fixes #250 See also #245
* resolved differences with Harolds lookup table approach
* Additional tests and fixing #260
* Automated adding outputs from tests
* Howl bellow shriek stomp
* Automated adding outputs from tests
* Mutter mumble whimper scream
* An even more heavy handed way to get pyldmod to replace pyld
* Created a table of python to JSON for the short term
* Short term fix for issue #202
* Add test case for issue #202

v1.0.1
------

* Automated adding outputs from tests
* Automated adding outputs from tests
* adding missing import
* fix logging to not dump whole object
* Automated adding outputs from tests
* Update main.yaml
* Another attempt to force pyldmod
* Re-add 3.7 to the pull tests
* Add output to output directory instead of printing on the run line
* Update pr-test.yaml
* docs
* Adding option for direct-mapping
* removing chatter
* Dynamic compile
* Everything works cepn' sqlddlgen
* Switched to using dynamic python
* cleanup
* attempting to dynamically compile
* tidying
* test files
* tidying
* tidy
* tidy
* sql ddl gen tests
* rewrite of SQL DDL gen
* generator tests
* extend
* negative tests
* test for https://github.com/linkml/linkml/pull/242
* test generators
* Automated adding outputs from tests
* Add pattern gen for jsonschema, fixes #193
* Attempt to fix Slot header so it doesn't include \`\_\_\`
* Automated adding outputs from tests
* Automated adding outputs from tests
* Remove sorting of slots on class pages
* Replaced test expecting http:// URL with https:// URL for YUML
* YUML images now include links to the full resolution images
* Updated YUML to use HTTPS instead of HTTP
* Added link to the CCDH model
* Automated adding outputs from tests
* Automatically generated requirements.txt and requirements-dev.txt
* Update main.yaml
* Trigger a rebuild on main

v1.0.0
------

* Multiple tweaks and what have you to get the unittests running
* Remove no longer needed github action
* Automated adding outputs from tests
* Updates to pass all "enhancements" directory tests
* Passes all enumeration tests
* Escaped asterisks used in cardinality strings
* Capitalized "range" on entity page
* Automated adding outputs from tests
* Automated adding outputs from tests
* Missed two changes in the rdf\_issues commit
* Add three options to jsonldcontext generator
* Add three options to jsonldcontext generator
* Prevent accidental creation of an inner test directory
* Automated adding outputs from tests
* Automatically generated requirements.txt and requirements-dev.txt
* Remove migration\_temp file
* Update sqlddlgen.py
* Automated adding outputs from tests
* Automatically generated requirements.txt and requirements-dev.txt
* Automated adding outputs from tests
* Replaced ASCII right arrow with Unicode
* Make predicate\_cardinality rendering identical to range\_cardinality
* Turned off titlecase in schema name
* Allow use of raw in CLI for yamlgen
* Correct description of domain of linkml
* Update python\_comparator.py
* Force the outputs to be up to date
* Make sure that all output files are current
* Clean up actions
* Automated adding outputs from tests
* Update pr-test.yaml
* Update pr-test.yaml
* Update pr-test.yaml
* Update pr-test.yaml
* Fix version typo in build
* Update pr-test.yaml
* Remove linkml-model dependencies
* Tests for issue on enum loading
* Move tox settings to the correct spot
* Update tests to use latest biolink-model
* Fix an issue where lists like class.slots or class.mixins failed if no list
* Update python generator to reference the linkml\_runtime model
* Bindings for SQL Alchemy
* Update required missing value check
* Sole non-published dependency is now on linkml-model
* Automated adding outputs from tests
* removed \n Add enums to markdowngen #120
* Automated adding outputs from tests
* permissible values table have 4  columns  #120
* Add enums to markdowngen #120
* filename to be underscored
* added next line tag
* Fix a couple of bad Pipfile entries
* Passes all non-disabled unit tests
* Switch to new runtime
* remove extraneous test artifact
* Alpha transition to linkml-runtime -- all duplicate code removed
* compile\_python migration
* Automated adding outputs from tests
* Automatically generated requirements.txt and requirements-dev.txt
* Update Pipfile
* Lock down to jsonasobj 1.3.1
* Update Pipfile
* Update Pipfile
* just added spaces to highlight addition
* updated class\_type\_link with EnumDef
* added properties with no value #120
* Automated adding outputs from tests
* testing singular name
* enum info => formatted markdown table
* fixes doc paths
* Automated adding outputs from tests
* Update pypi-publish.yaml
* Update pypi-publish.yaml
* added permissible values into markdown file #120
* camelcase -> underscore for name
* generates markdown for enums in yaml: issue #120
* Adding --noyuml option to markdowngen fixes #166
* Automated adding outputs from tests
* Handling edge cases
* fixed cli
* Fixed typo
* using mock generator; adding script
* first pass
* first pass with sql alchemy; see #79
* ensure terminus:Document via broad\_mappings
* now with abstract classes :sparkles:
* initial stab; works for nmdc.yaml!
* fix no-prefix warning
* Automated adding outputs from tests

v0.0.7
------

* Automated adding outputs from tests
* Add two parameters to markdowngen
* changing BiolinkML -> LinkML where appropriate
* Automated adding outputs from tests
* Automated adding outputs from tests
* Update examples notebook

v0.0.6
------

* Automated adding outputs from tests
* Update conditional evaluation
* Automated adding outputs from tests
* Remove docs commit from workflow
* Automated adding outputs from tests
* Remove section that generates docs director
* Remove generated docs directory
* Automated adding outputs from tests
* Remove pycache directory
* Temporary fix for build
* Add granular mappings from the model when generating OWL
* Automated adding outputs from tests
* Automatically generated requirements.txt and requirements-dev.txt
* Add support for python 3.7.1 - 3.7.5
* Automated adding outputs from tests
* Fix typos
* Automated adding outputs from tests
* Add some basic migration instructions
* Remove extraneous import

v0.0.5
------

* Automated adding outputs from tests
* Fix bug in docs generator
* Automated adding outputs from tests
* Force install of modified pyld
* Documentation changes
* Update main.yaml
* Update main.yaml
* revert to non-checked setup
* Loosen model requirements
* Typo in a Pipfile
* Final transition -- the biolinkml cord should be completely cut

v0.0.4
------

* Update pypi-publish.yaml

v0.0.3
------

* Automated update to docs with GitHub Actions
* Fix markdown generation
* Automated adding outputs from tests
* Automatically generated requirements.txt and requirements-dev.txt
* Fix actions test failures
* master --> main in workflow
* Tweaks to trigger the first workflow
* v0.0.2 drop
* First successful build
* First roll-over from biolinkml.  Does not pass tests yet
